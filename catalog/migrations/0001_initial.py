# Generated by Django 3.0.7 on 2020-06-29 09:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApplianceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип прибора',
                'verbose_name_plural': 'Типы прибора',
                'db_table': 'ApplianceType',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Название')),
                ('code', models.CharField(max_length=6, verbose_name='Код цвета (HEX)')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
                'db_table': 'Color',
            },
        ),
        migrations.CreateModel(
            name='ComponentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Название')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='component_types_images', verbose_name='Картинка')),
            ],
            options={
                'verbose_name': 'Тип комплектующих',
                'verbose_name_plural': 'Типы комплектующих',
                'db_table': 'ComponentType',
            },
        ),
        migrations.CreateModel(
            name='ConnectionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип подключения',
                'verbose_name_plural': 'Типы подключения',
                'db_table': 'ConnectionType',
            },
        ),
        migrations.CreateModel(
            name='LatticeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип решетки',
                'verbose_name_plural': 'Типы решеток',
                'db_table': 'LatticeType',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Название')),
                ('country', models.CharField(max_length=120, verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производители',
                'db_table': 'Manufacturer',
            },
        ),
        migrations.CreateModel(
            name='RecessedConvectorModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Модель встаиваемого конвектора',
                'verbose_name_plural': 'Модели встаиваемых конвекторов',
                'db_table': 'RecessedConvectorModel',
            },
        ),
        migrations.CreateModel(
            name='SideType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип бортика',
                'verbose_name_plural': 'Типы бортика',
                'db_table': 'SideType',
            },
        ),
        migrations.CreateModel(
            name='WallConvector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=400, verbose_name='Модель')),
                ('height', models.IntegerField(verbose_name='Высота')),
                ('width', models.IntegerField(verbose_name='Ширина')),
                ('length', models.IntegerField(verbose_name='Длина')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='wall_convector_images', verbose_name='Картинка')),
                ('description', models.TextField(verbose_name='Описание')),
                ('temperature', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальная рабочая температура')),
                ('pressure', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальное рабочее давление')),
                ('heat_output', models.FloatField(blank=True, default=None, null=True, verbose_name='Выход тепла')),
                ('surface_temperature', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальная температура поверхности')),
                ('connection', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Подключение')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('connection_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ConnectionType', verbose_name='Тип подключения')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Manufacturer', verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Настенный конвектор',
                'verbose_name_plural': 'Настенные конвекторы',
                'db_table': 'WallConvector',
            },
        ),
        migrations.CreateModel(
            name='SteelTubularRadiator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=400, verbose_name='Модель')),
                ('height', models.IntegerField(verbose_name='Высота')),
                ('width', models.IntegerField(verbose_name='Ширина')),
                ('depth', models.IntegerField(verbose_name='Глубина')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='steel_tubular_images', verbose_name='Картинка')),
                ('description', models.TextField(verbose_name='Описание')),
                ('power', models.CharField(max_length=120, verbose_name='Мощность (50 / 60 / 70)')),
                ('pressure', models.IntegerField(verbose_name='Рабочее давление')),
                ('weight', models.FloatField(verbose_name='Вес')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('connection_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ConnectionType', verbose_name='Тип подключения')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Manufacturer', verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Стальной трубчатый радиатор',
                'verbose_name_plural': 'Стальные трубчатые радиаторы',
                'db_table': 'SteelTubularRadiator',
            },
        ),
        migrations.CreateModel(
            name='SteelTubularKZTORadiator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer_name', models.CharField(default='KZTO', editable=False, max_length=100)),
                ('manufacturer_country', models.CharField(default='Россия', editable=False, max_length=100)),
                ('model_name', models.CharField(max_length=400, verbose_name='Модель')),
                ('length', models.IntegerField(verbose_name='Длина прибора')),
                ('mounting_size', models.IntegerField(verbose_name='Монтажный размер')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='steel_tubular_images', verbose_name='Картинка')),
                ('description', models.TextField(verbose_name='Описание')),
                ('power', models.CharField(max_length=120, verbose_name='Мощность (70)')),
                ('pressure', models.IntegerField(verbose_name='Рабочее давление')),
                ('weight', models.FloatField(verbose_name='Вес')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('appliance_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ApplianceType', verbose_name='Тип прибора')),
                ('connection_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ConnectionType', verbose_name='Тип подключения')),
            ],
            options={
                'verbose_name': 'Стальной трубчатый радиатор фирмы KZTO',
                'verbose_name_plural': 'Стальные трубчатые радиаторы фирмы KZTO',
                'db_table': 'SteelTubularKZTORadiator',
            },
        ),
        migrations.CreateModel(
            name='SteelPanelRadiator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=400, verbose_name='Модель')),
                ('height', models.IntegerField(verbose_name='Высота')),
                ('width', models.IntegerField(verbose_name='Ширина')),
                ('depth', models.IntegerField(verbose_name='Глубина')),
                ('center_distance', models.IntegerField(verbose_name='Межосевое расстояние')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='steel_panel_images', verbose_name='Картинка')),
                ('description', models.TextField(verbose_name='Описание')),
                ('power', models.CharField(max_length=120, verbose_name='Мощность (50 / 60 / 70)')),
                ('pressure', models.IntegerField(verbose_name='Рабочее давление')),
                ('weight', models.FloatField(verbose_name='Вес')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('connection_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ConnectionType', verbose_name='Тип подключения')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Manufacturer', verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Стальной панельный радиатор',
                'verbose_name_plural': 'Стальные панельные радиаторы',
                'db_table': 'SteelPanelRadiator',
            },
        ),
        migrations.CreateModel(
            name='RecessedConvector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.IntegerField(verbose_name='Высота, мм')),
                ('width', models.IntegerField(verbose_name='Ширина, мм')),
                ('length_unit', models.IntegerField(default=None, verbose_name='Единица длинны, мм')),
                ('min_length', models.IntegerField(default=None, verbose_name='Минимальная длинна, мм')),
                ('max_length', models.IntegerField(default=None, verbose_name='Максимальная длинна, мм')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='wall_convector_images', verbose_name='Картинка вид сверху')),
                ('main_photo', models.ImageField(blank=True, default=None, null=True, upload_to='wall_convector_images', verbose_name='Общая картинка (вид в профиль)')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price', models.FloatField(default=0, verbose_name='Цена за единицу длинны')),
                ('metal_thickness', models.FloatField(blank=True, default=None, null=True, verbose_name='Толщина меттала, мм')),
                ('lattice_type', models.FloatField(blank=True, default=None, null=True, verbose_name='Шаг ламелей решетки, мм')),
                ('presence_of_ribs', models.CharField(blank=True, default=None, max_length=300, null=True, verbose_name='Наличие ребер жесткости')),
                ('temperature', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальная рабочая температура')),
                ('pressure', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальное рабочее давление')),
                ('heat_output', models.FloatField(blank=True, default=None, null=True, verbose_name='Выход тепла')),
                ('surface_temperature', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальная температура поверхности')),
                ('connection', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Подключение')),
                ('connection_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ConnectionType', verbose_name='Тип подключения')),
                ('lattice', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='catalog.LatticeType', verbose_name='Тип решетки')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Manufacturer', verbose_name='Производитель')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.RecessedConvectorModel', verbose_name='Модель')),
                ('side', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='catalog.SideType', verbose_name='Тип бортика')),
            ],
            options={
                'verbose_name': 'Встраиваемый конвектор',
                'verbose_name_plural': 'Встраиваемые конвекторы',
                'db_table': 'RecessedConvector',
            },
        ),
        migrations.CreateModel(
            name='ManufacturerDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('radiator_type', models.IntegerField(choices=[(1, 'Дизайн радиаторы'), (2, 'Чугунные радиаторы'), (3, 'Встраиваемые конвекторы'), (4, 'Напольные конвекторы'), (5, 'Настенные конвекторы')], default=1, verbose_name='Тип радиоторов')),
                ('description', models.CharField(max_length=300, verbose_name='Описание')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='manufacturers_description_images', verbose_name='Картинка')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Manufacturer', verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Описание производителя',
                'verbose_name_plural': 'Описания производителей',
                'db_table': 'ManufacturerDescription',
            },
        ),
        migrations.CreateModel(
            name='FloorConvector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=400, verbose_name='Модель')),
                ('height', models.IntegerField(verbose_name='Высота')),
                ('width', models.IntegerField(verbose_name='Ширина')),
                ('length', models.IntegerField(verbose_name='Длина')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='floor_convector_images', verbose_name='Картинка')),
                ('description', models.TextField(verbose_name='Описание')),
                ('temperature', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальная рабочая температура')),
                ('pressure', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальное рабочее давление')),
                ('heat_output', models.FloatField(blank=True, default=None, null=True, verbose_name='Выход тепла')),
                ('surface_temperature', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальная температура поверхности')),
                ('connection', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Подключение')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('connection_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ConnectionType', verbose_name='Тип подключения')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Manufacturer', verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Напольный конвектор',
                'verbose_name_plural': 'Напольные конвекторы',
                'db_table': 'FloorConvector',
            },
        ),
        migrations.CreateModel(
            name='DesignRadiator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=400, verbose_name='Модель')),
                ('height', models.IntegerField(verbose_name='Высота')),
                ('width', models.IntegerField(verbose_name='Ширина')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='design_images', verbose_name='Картинка')),
                ('description', models.TextField(verbose_name='Описание')),
                ('power', models.CharField(max_length=120, verbose_name='Мощность (50 / 60 / 70)')),
                ('pressure', models.IntegerField(verbose_name='Рабочее давление')),
                ('weight', models.FloatField(verbose_name='Вес')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('colors', models.ManyToManyField(default=None, to='catalog.Color', verbose_name='Цвета')),
                ('manufacturer', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='catalog.Manufacturer', verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Дизайн радиатор',
                'verbose_name_plural': 'Дизайн радиаторы',
                'db_table': 'DesignRadiator',
            },
        ),
        migrations.CreateModel(
            name='CostIronRadiator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=400, verbose_name='Модель')),
                ('height', models.IntegerField(verbose_name='Высота')),
                ('width', models.IntegerField(verbose_name='Ширина')),
                ('depth', models.IntegerField(verbose_name='Глубина')),
                ('center_distance', models.IntegerField(verbose_name='Межосевое расстояние')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='cost_iron_images', verbose_name='Картинка')),
                ('description', models.TextField(verbose_name='Описание')),
                ('power', models.CharField(max_length=120, verbose_name='Мощность (50 / 60 / 70)')),
                ('pressure', models.IntegerField(verbose_name='Рабочее давление')),
                ('weight', models.FloatField(verbose_name='Вес')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('connection_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ConnectionType', verbose_name='Тип подключения')),
                ('manufacturer', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='catalog.Manufacturer', verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Чугунный радиатор',
                'verbose_name_plural': 'Чугунные радиаторы',
                'db_table': 'CostIronRadiator',
            },
        ),
        migrations.CreateModel(
            name='ComponentPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='aluminium_images', verbose_name='Картинка')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Manufacturer', verbose_name='Производитель')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ComponentType', verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Комплектующее',
                'verbose_name_plural': 'Комплектующие',
                'db_table': 'ComponentPart',
            },
        ),
        migrations.CreateModel(
            name='BimetalRadiator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=400, verbose_name='Модель')),
                ('height', models.IntegerField(verbose_name='Высота')),
                ('width', models.IntegerField(verbose_name='Ширина')),
                ('depth', models.IntegerField(verbose_name='Глубина')),
                ('center_distance', models.IntegerField(verbose_name='Межосевое расстояние')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='bimetal_images', verbose_name='Картинка')),
                ('description', models.TextField(verbose_name='Описание')),
                ('power', models.CharField(max_length=120, verbose_name='Мощность (50 / 60 / 70)')),
                ('pressure', models.IntegerField(verbose_name='Рабочее давление')),
                ('weight', models.FloatField(verbose_name='Вес')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('colors', models.ManyToManyField(default=None, to='catalog.Color', verbose_name='Цвета')),
                ('connection_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='catalog.ConnectionType', verbose_name='Тип подключения')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Manufacturer', verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Биметаллический радиатор',
                'verbose_name_plural': 'Биметаллические радиаторы',
                'db_table': 'BimetalRadiator',
            },
        ),
        migrations.CreateModel(
            name='AluminiumRadiator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=400, verbose_name='Модель')),
                ('height', models.IntegerField(verbose_name='Высота')),
                ('width', models.IntegerField(verbose_name='Ширина')),
                ('depth', models.IntegerField(verbose_name='Глубина')),
                ('center_distance', models.IntegerField(verbose_name='Межосевое расстояние')),
                ('photo', models.ImageField(blank=True, default=None, upload_to='aluminium_images', verbose_name='Картинка')),
                ('description', models.TextField(verbose_name='Описание')),
                ('power', models.CharField(max_length=120, verbose_name='Мощность (50 / 60 / 70)')),
                ('pressure', models.IntegerField(verbose_name='Рабочее давление')),
                ('weight', models.FloatField(verbose_name='Вес')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('connection_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ConnectionType', verbose_name='Тип подключения')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Manufacturer', verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Алюминиевый радиатор',
                'verbose_name_plural': 'Алюминиевые радиаторы',
                'db_table': 'AluminiumRadiator',
            },
        ),
    ]
